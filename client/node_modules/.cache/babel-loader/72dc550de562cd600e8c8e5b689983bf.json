{"ast":null,"code":"import setAuthToken from '../utils/setAuthToken';\nimport axios from 'axios';\nimport setAlert from './alert'; //add to order\n\nexport const addToOrder = formData => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  const {\n    user,\n    title,\n    imagename,\n    price,\n    address\n  } = formData;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    user,\n    title,\n    imagename,\n    price,\n    address\n  });\n\n  try {\n    const res = await axios.post('/api/order', body, config);\n    dispatch({\n      type: \"ORDER_ADDING_SUCCESS\",\n      payload: res.data\n    });\n    dispatch(setAlert('Order Placed Successfully !!', 'success'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: \"ORDER_ADDING_FAIL\"\n    });\n  }\n}; //get order\n\nexport const getOrder = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/order');\n    dispatch({\n      type: \"ORDER_GETTING_SUCCESS\",\n      payload: res.data\n    });\n    console.log(\"getorder\", res.data);\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: \"ORDER_GETTING_FAIL\"\n    });\n  }\n}; // remove from cart\n\nexport const deleteOrder = id => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  console.log('deleteOrder triggered');\n\n  try {\n    await axios.delete(`/api/order/${id}`);\n    dispatch({\n      type: \"ORDER_REMOVE_SUCCESS\",\n      payload: id\n    });\n    dispatch(setAlert('Order Cancelled', 'success'));\n  } catch (err) {\n    dispatch({\n      type: \"ORDER_REMOVE_FAIL\"\n    });\n  }\n};\nexport const deleteOrders = () => {\n  console.log(\"12345\");\n};","map":{"version":3,"sources":["C:/Users/HP/Desktop/PREPBYTES NEW/EA12/MERN-STACK/Online shopping cart/client/src/action/order.js"],"names":["setAuthToken","axios","setAlert","addToOrder","formData","dispatch","localStorage","token","user","title","imagename","price","address","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg","getOrder","get","console","log","deleteOrder","id","delete","deleteOrders"],"mappings":"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","sourcesContent":["import setAuthToken from '../utils/setAuthToken';\r\nimport axios from 'axios';\r\nimport setAlert from './alert';\r\n\r\n\r\n//add to order\r\nexport const addToOrder = formData => async dispatch =>{\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    const {user,title,imagename,price,address} = formData;\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({user,title,imagename,price,address});\r\n    try{\r\n        const res = await axios.post('/api/order',body,config);\r\n        dispatch({\r\n            type : \"ORDER_ADDING_SUCCESS\",\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert('Order Placed Successfully !!', 'success'));\r\n    }\r\n    catch(err){\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger')))\r\n        }\r\n        dispatch({\r\n            type:\"ORDER_ADDING_FAIL\"\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\n//get order\r\nexport const getOrder = () => async dispatch =>{\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    try{\r\n        const res = await axios.get('/api/order');\r\n        dispatch({\r\n            type : \"ORDER_GETTING_SUCCESS\",\r\n            payload:res.data\r\n        });\r\n        console.log(\"getorder\",res.data)\r\n    }\r\n    catch(err){\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger')))\r\n        }\r\n        dispatch({\r\n            type:\"ORDER_GETTING_FAIL\"\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n// remove from cart\r\nexport const deleteOrder = (id) => async dispatch =>{\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    console.log('deleteOrder triggered')\r\n    try{\r\n        await axios.delete(`/api/order/${id}`);\r\n        dispatch({\r\n            type:\"ORDER_REMOVE_SUCCESS\",\r\n            payload:id\r\n        })\r\n        dispatch(setAlert('Order Cancelled', 'success'));\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: \"ORDER_REMOVE_FAIL\",\r\n          });\r\n    }\r\n}\r\n\r\nexport const deleteOrders = () =>{\r\n    console.log(\"12345\")\r\n}"]},"metadata":{},"sourceType":"module"}