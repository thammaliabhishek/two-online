{"ast":null,"code":"import setAuthToken from '../utils/setAuthToken';\nimport axios from 'axios';\nimport setAlert from './alert'; //add to cart\n\nexport const addToCart = formData => async dispatch => {\n  const {\n    user,\n    title,\n    imagename,\n    price\n  } = formData;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    user,\n    title,\n    imagename,\n    price\n  });\n\n  try {\n    const res = await axios.post('/api/cart', body, config);\n    dispatch({\n      type: \"CART_ADDING_SUCCESS\",\n      payload: res.data\n    });\n    dispatch(setAlert('Item Added to Cart', 'success'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: \"CART_ADDING_FAIL\"\n    });\n  }\n}; //get cart\n\nexport const getCart = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/cart');\n    dispatch({\n      type: \"CART_GETTING_SUCCESS\",\n      payload: res.data\n    });\n    console.log(\"getcart\", res.data);\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: \"CART_GETTING_FAIL\"\n    });\n  }\n}; // remove from cart\n\nexport const deleteCart = id => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    await axios.delete(`/api/cart/${id}`);\n    dispatch({\n      type: \"CART_REMOVE_SUCCESS\",\n      payload: id\n    });\n    dispatch(setAlert('Item Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: \"CART_REMOVE_FAIL\"\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/HP/Desktop/PREPBYTES NEW/EA12/MERN-STACK/Online shopping cart/client/src/action/cart.js"],"names":["setAuthToken","axios","setAlert","addToCart","formData","dispatch","user","title","imagename","price","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg","getCart","localStorage","token","get","console","log","deleteCart","id","delete"],"mappings":"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","sourcesContent":["import setAuthToken from '../utils/setAuthToken';\r\nimport axios from 'axios';\r\nimport setAlert from './alert';\r\n\r\n\r\n//add to cart\r\nexport const addToCart = formData => async dispatch =>{\r\n    const {user,title,imagename,price} = formData;\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({user,title,imagename,price});\r\n    try{\r\n        const res = await axios.post('/api/cart',body,config);\r\n        dispatch({\r\n            type : \"CART_ADDING_SUCCESS\",\r\n            payload:res.data\r\n        });\r\n        dispatch(setAlert('Item Added to Cart', 'success'));\r\n    }\r\n    catch(err){\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger')))\r\n        }\r\n        dispatch({\r\n            type:\"CART_ADDING_FAIL\"\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\n//get cart\r\nexport const getCart = () => async dispatch =>{\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    try{\r\n        const res = await axios.get('/api/cart');\r\n        dispatch({\r\n            type : \"CART_GETTING_SUCCESS\",\r\n            payload:res.data\r\n        });\r\n        console.log(\"getcart\",res.data)\r\n    }\r\n    catch(err){\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger')))\r\n        }\r\n        dispatch({\r\n            type:\"CART_GETTING_FAIL\"\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n// remove from cart\r\nexport const deleteCart = id => async dispatch =>{\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }\r\n    try{\r\n        await axios.delete(`/api/cart/${id}`);\r\n        dispatch({\r\n            type:\"CART_REMOVE_SUCCESS\",\r\n            payload:id\r\n        })\r\n        dispatch(setAlert('Item Removed', 'success'));\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: \"CART_REMOVE_FAIL\",\r\n          });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}