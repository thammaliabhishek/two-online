{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\PREPBYTES NEW\\\\EA12\\\\MERN-STACK\\\\Online shopping cart\\\\client\\\\src\\\\component\\\\Products\\\\PlaceOrder.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addToOrder } from '../../action/order';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlaceOrder = ({\n  match,\n  user,\n  addToOrder\n}) => {\n  _s();\n\n  let data = match.params.data.split('+');\n  let paramstitle = data && data[0];\n  let paramsimagename = data && data[1];\n  let paramsprice = data && data[2];\n  let paramsaddress = data && data[3];\n  const [flag, setFlag] = useState(0);\n  const [formData, setFormData] = useState({\n    title: paramstitle,\n    imagename: paramsimagename,\n    price: paramsprice,\n    address: paramsaddress\n  });\n  let {\n    title,\n    imagename,\n    price,\n    address\n  } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const [toggle, setToggle] = useState(false);\n  const [alter, setAlter] = useState('');\n\n  const alterChange = e => {\n    setAlter(e.target.value);\n  };\n\n  const onSubmit = e => {\n    setFlag(1);\n    window.alert(\"Your Order Placed Successfully\");\n    e.preventDefault();\n\n    if (toggle) {\n      address = alter;\n      addToOrder({\n        user,\n        title,\n        imagename,\n        price,\n        address\n      });\n      setAlter('');\n    } else {\n      addToOrder({\n        user,\n        title,\n        imagename,\n        price,\n        address\n      });\n      setAlter('');\n    }\n  };\n\n  console.log(\"flag\", flag);\n\n  if (flag === 1) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: \"Place Your Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body mr-auto ml-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [!toggle && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  name: \"address\",\n                  value: address,\n                  onChange: onChange,\n                  className: \"form-check-input\",\n                  id: \"exampleCheck1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  for: \"exampleCheck1\",\n                  children: [address, \" (Registered address as delivery address)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"exampleInputText1\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Note : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 48\n              }, this), \"If you need to change delivery address, Please \", /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => setToggle(!toggle),\n                children: \"click here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 119\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), toggle && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"alter\",\n                value: alter,\n                onChange: alterChange,\n                className: \"form-control\",\n                id: \"exampleInputText1\",\n                \"aria-describedby\": \"textHelp\",\n                placeholder: \"Enter New Delivery Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"textHelp\",\n                className: \"form-text text-muted\",\n                children: \"Kindly Provide Valid Delivery Address.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Confirm Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PlaceOrder, \"BtrYhfavZ6lREDIi89OULAJ482s=\");\n\n_c = PlaceOrder;\n\nconst mapStateToProps = state => ({\n  user: state.auth.user._id\n});\n\nexport default connect(mapStateToProps, {\n  addToOrder\n})(PlaceOrder);\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaceOrder\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/PREPBYTES NEW/EA12/MERN-STACK/Online shopping cart/client/src/component/Products/PlaceOrder.js"],"names":["React","Fragment","useState","Link","Redirect","connect","addToOrder","PlaceOrder","match","user","data","params","split","paramstitle","paramsimagename","paramsprice","paramsaddress","flag","setFlag","formData","setFormData","title","imagename","price","address","onChange","e","target","name","value","toggle","setToggle","alter","setAlter","alterChange","onSubmit","window","alert","preventDefault","console","log","mapStateToProps","state","auth","_id"],"mappings":"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","sourcesContent":["import React,{ Fragment,useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {addToOrder} from '../../action/order';\r\n\r\nconst PlaceOrder = ({ match,user,addToOrder }) => {\r\n    let data = match.params.data.split('+')\r\n    let paramstitle = data && data[0];\r\n    let paramsimagename = data && data[1];\r\n    let paramsprice = data && data[2];\r\n    let paramsaddress = data && data[3];\r\n    const [flag,setFlag] = useState(0);\r\n    const [formData,setFormData] = useState({\r\n        title:paramstitle,\r\n        imagename:paramsimagename,\r\n        price : paramsprice,\r\n        address : paramsaddress\r\n    });\r\n    let {title,imagename,price,address} = formData;\r\n    const onChange = e =>{\r\n        setFormData({...formData,[e.target.name]:e.target.value});\r\n    }\r\n    const [toggle,setToggle] = useState(false);\r\n    const [alter,setAlter] = useState('');\r\n    const alterChange = e =>{\r\n        setAlter(e.target.value);\r\n    }\r\n  \r\n    const onSubmit = e =>{\r\n        setFlag(1)\r\n        window.alert(\"Your Order Placed Successfully\")\r\n        e.preventDefault();\r\n        if(toggle){\r\n            address = alter;\r\n            addToOrder({user,title,imagename,price,address});\r\n           setAlter('');\r\n        }\r\n        else{\r\n            addToOrder({user,title,imagename,price,address});\r\n            setAlter('');\r\n        }\r\n        \r\n    }\r\n    console.log(\"flag\",flag);\r\n    if(flag === 1){\r\n        return <Redirect to='/order' />\r\n    }\r\n   \r\n    return (\r\n        <Fragment>\r\n            <div className=\"card text-center\">\r\n            <div className=\"card-header\">\r\n                Place Your Order\r\n            </div>\r\n            <div className=\"card-body mr-auto ml-auto\">\r\n\r\n            <form onSubmit={onSubmit}>\r\n            <div className=\"form-group\" >\r\n                {!toggle && <Fragment>\r\n                    <div className=\"form-check\">\r\n                        <input type=\"checkbox\"  name='address' value={address} onChange={onChange}  className=\"form-check-input\" id=\"exampleCheck1\" />\r\n                        <label className=\"form-check-label\" for=\"exampleCheck1\">{address} (Registered address as delivery address)</label>\r\n                    </div>\r\n                    </Fragment>}\r\n            \r\n                <label for=\"exampleInputText1\"><strong>Note : </strong>If you need to change delivery address, Please <Link onClick={()=> setToggle(!toggle)}>click here</Link></label>\r\n               { toggle && \r\n               <Fragment>\r\n               <input type=\"text\"  name='alter' value={alter} onChange={alterChange}  className=\"form-control\" id=\"exampleInputText1\" aria-describedby=\"textHelp\" placeholder=\"Enter New Delivery Address\" />\r\n                <small id=\"textHelp\" className=\"form-text text-muted\">Kindly Provide Valid Delivery Address.</small>\r\n                </Fragment>}\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Confirm Order</button>\r\n            </form>\r\n\r\n\r\n            </div>\r\n            </div>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n  \r\n  const mapStateToProps = state => ({\r\n    user : state.auth.user._id,\r\n  });\r\n  \r\n  export default connect(mapStateToProps, { addToOrder })(PlaceOrder);\r\n  "]},"metadata":{},"sourceType":"module"}